文档管理

插入文档
save()
格式： db.集和名.save（{key:"值"，key:"值"}）
集和不存在时创建集和,然后在插入记录
_id子段值已存在时,修改文档子段值
_id子段值不存在时,插入文档
inster()
格式： db.集和名.inster（{key:"值"，key:"值"}）
集和不存在时创建集和,然后在插入记录
_id子段值已存在时,放弃插入
_id子段值不存在时,插入文档
insterMary()
插入多条记录
格式： db.集和名.insterMary([{记录},{记录}])

查询文档
db.集和名.find() //显示所有行
db.集和名.findOne() //显示第一行
db.集和名.find({条件},{显示的子段})
# db.t1.find({条件},{_id:0,name:1,shell:1}) // 0 不显示  1 显示

行数显示限制
limit(数字) //显示前几行
skip（数字） //跳过前几行
sort（子段名） //1升序 -1降序  # db.集和名.find().sort(uid:1|-1)

匹配条件

范围比较
--$in 在...里 // db.集和名.find({uid:{$in:[1,2,3,4]}})
--$nin 不在...里  // db.集和名.find({uid:{$nin:[1,2,3,4]}})
--$or  或 // db.集和名.find($or:[{name:"root"},{uid:1}]) // 满足任何一个条件即输出

正则匹配
db.集和名.fing({name:/正则表达式/})
数值比较
$gt/大于 $gte/大于等于 $lt/小于 $lte/小于等于 $ne/等于

更新文档

update()
语法格式： db.集和名.update({条件},{修改的子段}) *把文件的其他子段都删除了，只留下了修改的字段，且只能修改与条件匹配的第一行
多文档更新
db.集和名.update（{条件}，{$set{修改的子段}},false,true）
*修改满足条件匹配到的所有行，不删除其他子段

$set/$unset
$set 条件匹配时,修改指定字段的值
db.集和名.update({条件},$set{修改的字段})

$unset 删除与条件匹配文档的字段
db.集和名.update({条件},{$unset:{key:values}})

$inc 条件匹配时,字段值自加或自减
db.集和名.update({条件},{$inc{字段名:数字}})

$push/$addToSet
$push 向数组中添加新元素
db.集和名.update({条件},{$push:{数组名:"值"}})
$addToSet 避免重复添加
db.集和名.update({条件},{$addToSet:{数组名:"值"}})

$pop/$pull
$pop 从数组头部删除一个元素
db.集和名.update({条件},{$pop:{数组名:数字}}) //1 删除数组尾部元素 /-1 删除数组头部元素
$pull 删除数组制定元素
db.集和名.update({条件},{$pull:{数组名：值}}) //当删除的值存在多个时 全部删除

删除文档
$drop/$remove

$drop 删除集和同时删除索引
db.集和名.drop()
$remove() 删除文档时不删除索引
db.集和名.remove({}) 删除所有文档
db.集和名.remove({条件}) 删除与条件匹配的文档































